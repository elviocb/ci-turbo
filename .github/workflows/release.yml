name: Release

on:
  push:
    branches:
      - staging
      - main

jobs:
  release:
    name: Release Packages
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: app
          persist-credentials: false
          fetch-depth: '0'        

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14.17'

      # - name: Restore node modules cache
      #   uses: actions/cache@v2
      #   id: node-modules-cache
      #   with:
      #     path: |
      #       **/node_modules
      #     key: node-cache-${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       node-cache-${{ runner.os }}-node-modules-

      - name: Install yarn
        run: npm install -g yarn

      # - name: Get yarn cache directory path
      #   if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      # - name: Restore yarn cache
      #   if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
      #   uses: actions/cache@v2
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: yarn-cache-${{ runner.os }}-yarn-node-modules-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       yarn-cache-${{ runner.os }}-yarn-node-modules-

      - name: Install dependencies
        run: |
          yarn policies set-version
          yarn install

      - name: Generate Releases
        run: yarn release
